# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(870, 537)
        mainWindow.setBaseSize(QtCore.QSize(0, 0))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Program icon/GridCal_icon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        mainWindow.setWindowIcon(icon)
        mainWindow.setIconSize(QtCore.QSize(24, 24))
        mainWindow.setDocumentMode(False)
        mainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        mainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.GridTab = QtWidgets.QWidget()
        self.GridTab.setObjectName("GridTab")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.GridTab)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.splitter_2 = QtWidgets.QSplitter(self.GridTab)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.splitter = QtWidgets.QSplitter(self.splitter_2)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.frame = QtWidgets.QFrame(self.splitter)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.items_listView = QtWidgets.QListView(self.frame)
        self.items_listView.setObjectName("items_listView")
        self.verticalLayout_4.addWidget(self.items_listView)
        self.frame_4 = QtWidgets.QFrame(self.frame)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.refresh_items_pushButton = QtWidgets.QPushButton(self.frame_4)
        self.refresh_items_pushButton.setObjectName("refresh_items_pushButton")
        self.horizontalLayout.addWidget(self.refresh_items_pushButton)
        self.verticalLayout_4.addWidget(self.frame_4)
        self.frame_2 = QtWidgets.QFrame(self.splitter)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.resultsPlot = MatplotlibWidget(self.frame_2)
        self.resultsPlot.setObjectName("resultsPlot")
        self.verticalLayout.addWidget(self.resultsPlot)
        self.magnitude_comboBox = QtWidgets.QComboBox(self.frame_2)
        self.magnitude_comboBox.setObjectName("magnitude_comboBox")
        self.verticalLayout.addWidget(self.magnitude_comboBox)
        self.frame_3 = QtWidgets.QFrame(self.splitter_2)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame_5 = QtWidgets.QFrame(self.frame_3)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout.setObjectName("gridLayout")
        self.label_3 = QtWidgets.QLabel(self.frame_5)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 0, 1, 1, 1)
        self.max_val_doubleSpinBox = QtWidgets.QDoubleSpinBox(self.frame_5)
        self.max_val_doubleSpinBox.setDecimals(1)
        self.max_val_doubleSpinBox.setMaximum(10000.0)
        self.max_val_doubleSpinBox.setProperty("value", 10.0)
        self.max_val_doubleSpinBox.setObjectName("max_val_doubleSpinBox")
        self.gridLayout.addWidget(self.max_val_doubleSpinBox, 1, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.frame_5)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.min_val_doubleSpinBox = QtWidgets.QDoubleSpinBox(self.frame_5)
        self.min_val_doubleSpinBox.setDecimals(1)
        self.min_val_doubleSpinBox.setMaximum(1000.0)
        self.min_val_doubleSpinBox.setObjectName("min_val_doubleSpinBox")
        self.gridLayout.addWidget(self.min_val_doubleSpinBox, 1, 0, 1, 1)
        self.value_horizontalSlider = QtWidgets.QSlider(self.frame_5)
        self.value_horizontalSlider.setMaximum(100)
        self.value_horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.value_horizontalSlider.setObjectName("value_horizontalSlider")
        self.gridLayout.addWidget(self.value_horizontalSlider, 1, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.frame_5)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 2, 1, 1)
        self.send_pushButton = QtWidgets.QPushButton(self.frame_5)
        self.send_pushButton.setObjectName("send_pushButton")
        self.gridLayout.addWidget(self.send_pushButton, 1, 3, 1, 1)
        self.horizontalLayout_2.addWidget(self.frame_5)
        self.verticalLayout_3.addWidget(self.splitter_2)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/Icons/white_icons/grid_icon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.GridTab, icon1, "")
        self.SettingsTab = QtWidgets.QWidget()
        self.SettingsTab.setObjectName("SettingsTab")
        self.label_4 = QtWidgets.QLabel(self.SettingsTab)
        self.label_4.setGeometry(QtCore.QRect(30, 70, 67, 17))
        self.label_4.setObjectName("label_4")
        self.url_lineEdit = QtWidgets.QLineEdit(self.SettingsTab)
        self.url_lineEdit.setGeometry(QtCore.QRect(70, 70, 441, 25))
        self.url_lineEdit.setObjectName("url_lineEdit")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/Icons/white_icons/gear.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.SettingsTab, icon2, "")
        self.verticalLayout_2.addWidget(self.tabWidget)
        self.status_label = QtWidgets.QLabel(self.centralwidget)
        self.status_label.setObjectName("status_label")
        self.verticalLayout_2.addWidget(self.status_label)
        mainWindow.setCentralWidget(self.centralwidget)
        self.actionLine = QtWidgets.QAction(mainWindow)
        self.actionLine.setObjectName("actionLine")
        self.actionTransformer = QtWidgets.QAction(mainWindow)
        self.actionTransformer.setObjectName("actionTransformer")
        self.actionLine_type = QtWidgets.QAction(mainWindow)
        self.actionLine_type.setObjectName("actionLine_type")
        self.actionTransformer_type = QtWidgets.QAction(mainWindow)
        self.actionTransformer_type.setObjectName("actionTransformer_type")
        self.actionOpen_file = QtWidgets.QAction(mainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/Icons/white_icons/loadc.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_file.setIcon(icon3)
        self.actionOpen_file.setObjectName("actionOpen_file")
        self.actionSave = QtWidgets.QAction(mainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/Icons/white_icons/savec.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon4)
        self.actionSave.setObjectName("actionSave")
        self.actionImport = QtWidgets.QAction(mainWindow)
        self.actionImport.setObjectName("actionImport")
        self.actionExport = QtWidgets.QAction(mainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/Icons/white_icons/save.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport.setIcon(icon5)
        self.actionExport.setObjectName("actionExport")
        self.actionNew_project = QtWidgets.QAction(mainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/Icons/white_icons/new2c.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew_project.setIcon(icon6)
        self.actionNew_project.setObjectName("actionNew_project")
        self.actionColor_by_type = QtWidgets.QAction(mainWindow)
        self.actionColor_by_type.setCheckable(True)
        self.actionColor_by_type.setChecked(True)
        self.actionColor_by_type.setObjectName("actionColor_by_type")
        self.actionColor_by_results = QtWidgets.QAction(mainWindow)
        self.actionColor_by_results.setObjectName("actionColor_by_results")
        self.actionPower_flow = QtWidgets.QAction(mainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/Icons/white_icons/pf.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPower_flow.setIcon(icon7)
        self.actionPower_flow.setObjectName("actionPower_flow")
        self.actionPower_Flow_Time_series = QtWidgets.QAction(mainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/Icons/white_icons/pf_ts.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPower_Flow_Time_series.setIcon(icon8)
        self.actionPower_Flow_Time_series.setObjectName("actionPower_Flow_Time_series")
        self.actionBlackout = QtWidgets.QAction(mainWindow)
        self.actionBlackout.setObjectName("actionBlackout")
        self.actionMove_node_Up = QtWidgets.QAction(mainWindow)
        self.actionMove_node_Up.setObjectName("actionMove_node_Up")
        self.actionMove_node_Down = QtWidgets.QAction(mainWindow)
        self.actionMove_node_Down.setObjectName("actionMove_node_Down")
        self.actionMove_node_Left = QtWidgets.QAction(mainWindow)
        self.actionMove_node_Left.setObjectName("actionMove_node_Left")
        self.actionMove_node_Right = QtWidgets.QAction(mainWindow)
        self.actionMove_node_Right.setObjectName("actionMove_node_Right")
        self.actionBus_voltages = QtWidgets.QAction(mainWindow)
        self.actionBus_voltages.setObjectName("actionBus_voltages")
        self.actionBranches_current = QtWidgets.QAction(mainWindow)
        self.actionBranches_current.setObjectName("actionBranches_current")
        self.actionBranches_loading = QtWidgets.QAction(mainWindow)
        self.actionBranches_loading.setObjectName("actionBranches_loading")
        self.actionBlackout_2 = QtWidgets.QAction(mainWindow)
        self.actionBlackout_2.setObjectName("actionBlackout_2")
        self.actionBranches_losses = QtWidgets.QAction(mainWindow)
        self.actionBranches_losses.setObjectName("actionBranches_losses")
        self.actionBus_voltages_p_u = QtWidgets.QAction(mainWindow)
        self.actionBus_voltages_p_u.setObjectName("actionBus_voltages_p_u")
        self.actionBigger_nodes = QtWidgets.QAction(mainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/Icons/white_icons/plus.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBigger_nodes.setIcon(icon9)
        self.actionBigger_nodes.setObjectName("actionBigger_nodes")
        self.actionSmaller_nodes = QtWidgets.QAction(mainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/Icons/white_icons/minus.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSmaller_nodes.setIcon(icon10)
        self.actionSmaller_nodes.setObjectName("actionSmaller_nodes")
        self.actionPower_flow_Stochastic = QtWidgets.QAction(mainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/Icons/white_icons/stochastic_power_flow.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPower_flow_Stochastic.setIcon(icon11)
        self.actionPower_flow_Stochastic.setObjectName("actionPower_flow_Stochastic")
        self.actionActivate_map = QtWidgets.QAction(mainWindow)
        self.actionActivate_map.setObjectName("actionActivate_map")
        self.actionVoltage_p_u = QtWidgets.QAction(mainWindow)
        self.actionVoltage_p_u.setObjectName("actionVoltage_p_u")
        self.actionCurrent_p_u = QtWidgets.QAction(mainWindow)
        self.actionCurrent_p_u.setObjectName("actionCurrent_p_u")
        self.actionLoading = QtWidgets.QAction(mainWindow)
        self.actionLoading.setObjectName("actionLoading")
        self.actionLosses = QtWidgets.QAction(mainWindow)
        self.actionLosses.setObjectName("actionLosses")
        self.actionVoltage_stability = QtWidgets.QAction(mainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/Icons/white_icons/continuation_power_flow.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionVoltage_stability.setIcon(icon12)
        self.actionVoltage_stability.setObjectName("actionVoltage_stability")
        self.actionAbout = QtWidgets.QAction(mainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCenter_view = QtWidgets.QAction(mainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/Icons/white_icons/resize.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCenter_view.setIcon(icon13)
        self.actionCenter_view.setObjectName("actionCenter_view")
        self.actionShort_Circuit = QtWidgets.QAction(mainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/Icons/white_icons/short_circuit.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShort_Circuit.setIcon(icon14)
        self.actionShort_Circuit.setObjectName("actionShort_Circuit")
        self.actionAutoatic_layout = QtWidgets.QAction(mainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/Icons/white_icons/automatic_layout.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAutoatic_layout.setIcon(icon15)
        self.actionAutoatic_layout.setObjectName("actionAutoatic_layout")
        self.actionLatin_Hypercube_Sampling = QtWidgets.QAction(mainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/Icons/white_icons/latin_hypercube2.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLatin_Hypercube_Sampling.setIcon(icon16)
        self.actionLatin_Hypercube_Sampling.setObjectName("actionLatin_Hypercube_Sampling")
        self.actionBlackout_cascade = QtWidgets.QAction(mainWindow)
        self.actionBlackout_cascade.setCheckable(True)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/Icons/white_icons/blackout.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBlackout_cascade.setIcon(icon17)
        self.actionBlackout_cascade.setObjectName("actionBlackout_cascade")
        self.actionRun_complete_cascade = QtWidgets.QAction(mainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/file/run_cascade.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRun_complete_cascade.setIcon(icon18)
        self.actionRun_complete_cascade.setObjectName("actionRun_complete_cascade")
        self.actionRun_cascade_step = QtWidgets.QAction(mainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/file/run_cascade_step.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRun_cascade_step.setIcon(icon19)
        self.actionRun_cascade_step.setObjectName("actionRun_cascade_step")
        self.actionCopy_cascade_state_to_main_grid = QtWidgets.QAction(mainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/white/white_icons/copy.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy_cascade_state_to_main_grid.setIcon(icon20)
        self.actionCopy_cascade_state_to_main_grid.setObjectName("actionCopy_cascade_state_to_main_grid")
        self.actionOPF = QtWidgets.QAction(mainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/Icons/white_icons/dcopf.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOPF.setIcon(icon21)
        self.actionOPF.setObjectName("actionOPF")
        self.actionOPF_time_series = QtWidgets.QAction(mainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/Icons/white_icons/dcopf_ts.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOPF_time_series.setIcon(icon22)
        self.actionOPF_time_series.setObjectName("actionOPF_time_series")
        self.actionDetect_transformers = QtWidgets.QAction(mainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/Icons/white_icons/detect_tr.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDetect_transformers.setIcon(icon23)
        self.actionDetect_transformers.setObjectName("actionDetect_transformers")
        self.actionAuto_rate_branches = QtWidgets.QAction(mainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/Icons/white_icons/rate_br.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAuto_rate_branches.setIcon(icon24)
        self.actionAuto_rate_branches.setObjectName("actionAuto_rate_branches")

        self.retranslateUi(mainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "GridCal client"))
        self.refresh_items_pushButton.setText(_translate("mainWindow", "Refresh list"))
        self.label_3.setText(_translate("mainWindow", "val"))
        self.label.setText(_translate("mainWindow", "Min"))
        self.label_2.setText(_translate("mainWindow", "Max"))
        self.send_pushButton.setText(_translate("mainWindow", "Send"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.GridTab), _translate("mainWindow", "Grid data"))
        self.label_4.setText(_translate("mainWindow", "URL"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.SettingsTab), _translate("mainWindow", "Settings"))
        self.status_label.setText(_translate("mainWindow", "Status"))
        self.actionLine.setText(_translate("mainWindow", "Add Line"))
        self.actionLine.setToolTip(_translate("mainWindow", "Line"))
        self.actionLine.setShortcut(_translate("mainWindow", "Alt+L"))
        self.actionTransformer.setText(_translate("mainWindow", "Add Transformer"))
        self.actionTransformer.setShortcut(_translate("mainWindow", "Alt+T"))
        self.actionLine_type.setText(_translate("mainWindow", "Line type"))
        self.actionLine_type.setShortcut(_translate("mainWindow", "Alt+L, Alt+T"))
        self.actionTransformer_type.setText(_translate("mainWindow", "Transformer type"))
        self.actionTransformer_type.setShortcut(_translate("mainWindow", "Alt+T, Alt+T"))
        self.actionOpen_file.setText(_translate("mainWindow", "Open file"))
        self.actionOpen_file.setShortcut(_translate("mainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("mainWindow", "Save"))
        self.actionSave.setShortcut(_translate("mainWindow", "Ctrl+S"))
        self.actionImport.setText(_translate("mainWindow", "Import"))
        self.actionExport.setText(_translate("mainWindow", "Export"))
        self.actionNew_project.setText(_translate("mainWindow", "New project"))
        self.actionNew_project.setShortcut(_translate("mainWindow", "Ctrl+N"))
        self.actionColor_by_type.setText(_translate("mainWindow", "Color by type"))
        self.actionColor_by_results.setText(_translate("mainWindow", "Color by results"))
        self.actionPower_flow.setText(_translate("mainWindow", "Power Flow"))
        self.actionPower_Flow_Time_series.setText(_translate("mainWindow", "Power Flow: Time series"))
        self.actionPower_Flow_Time_series.setToolTip(_translate("mainWindow", "Power flow time series"))
        self.actionBlackout.setText(_translate("mainWindow", "Blackout"))
        self.actionMove_node_Up.setText(_translate("mainWindow", "Move node Up"))
        self.actionMove_node_Up.setShortcut(_translate("mainWindow", "Ctrl+Up"))
        self.actionMove_node_Down.setText(_translate("mainWindow", "Move node Down"))
        self.actionMove_node_Down.setShortcut(_translate("mainWindow", "Ctrl+Down"))
        self.actionMove_node_Left.setText(_translate("mainWindow", "Move node Left"))
        self.actionMove_node_Left.setShortcut(_translate("mainWindow", "Ctrl+Left"))
        self.actionMove_node_Right.setText(_translate("mainWindow", "Move node Right"))
        self.actionMove_node_Right.setShortcut(_translate("mainWindow", "Ctrl+Right"))
        self.actionBus_voltages.setText(_translate("mainWindow", "Bus voltages"))
        self.actionBranches_current.setText(_translate("mainWindow", "Branches current"))
        self.actionBranches_loading.setText(_translate("mainWindow", "Branches loading (%)"))
        self.actionBlackout_2.setText(_translate("mainWindow", "Blackout"))
        self.actionBranches_losses.setText(_translate("mainWindow", "Branches losses"))
        self.actionBus_voltages_p_u.setText(_translate("mainWindow", "Bus voltages (p.u.)"))
        self.actionBigger_nodes.setText(_translate("mainWindow", "Expand"))
        self.actionBigger_nodes.setToolTip(_translate("mainWindow", "Expand distances"))
        self.actionSmaller_nodes.setText(_translate("mainWindow", "Shrink"))
        self.actionSmaller_nodes.setToolTip(_translate("mainWindow", "Shrink distances"))
        self.actionPower_flow_Stochastic.setText(_translate("mainWindow", "Power flow: Stochastic"))
        self.actionPower_flow_Stochastic.setToolTip(_translate("mainWindow", "Monte Carlo stochastic power flow"))
        self.actionActivate_map.setText(_translate("mainWindow", "Activate map"))
        self.actionVoltage_p_u.setText(_translate("mainWindow", "Voltage (p.u.)"))
        self.actionCurrent_p_u.setText(_translate("mainWindow", "Current (p.u.)"))
        self.actionLoading.setText(_translate("mainWindow", "Loading (%)"))
        self.actionLosses.setText(_translate("mainWindow", "Losses"))
        self.actionVoltage_stability.setText(_translate("mainWindow", "Voltage stability"))
        self.actionVoltage_stability.setToolTip(_translate("mainWindow", "Voltage collapse"))
        self.actionAbout.setText(_translate("mainWindow", "About"))
        self.actionCenter_view.setText(_translate("mainWindow", "center view"))
        self.actionCenter_view.setToolTip(_translate("mainWindow", "Center view"))
        self.actionShort_Circuit.setText(_translate("mainWindow", "Short Circuit"))
        self.actionAutoatic_layout.setText(_translate("mainWindow", "Autoatic layout"))
        self.actionAutoatic_layout.setToolTip(_translate("mainWindow", "Automatic layout the of the grid"))
        self.actionLatin_Hypercube_Sampling.setText(_translate("mainWindow", "Latin Hypercube Sampling"))
        self.actionLatin_Hypercube_Sampling.setToolTip(_translate("mainWindow", "Latin Hypercube stochastic power flow"))
        self.actionBlackout_cascade.setText(_translate("mainWindow", "Blackout cascade"))
        self.actionBlackout_cascade.setToolTip(_translate("mainWindow", "Run a simulation or step by step blackout cascade"))
        self.actionRun_complete_cascade.setText(_translate("mainWindow", "run complete cascade"))
        self.actionRun_cascade_step.setText(_translate("mainWindow", "Run cascade step"))
        self.actionCopy_cascade_state_to_main_grid.setText(_translate("mainWindow", "Copy cascade state to main grid"))
        self.actionOPF.setText(_translate("mainWindow", "OPF"))
        self.actionOPF.setToolTip(_translate("mainWindow", "Optimal power flow"))
        self.actionOPF_time_series.setText(_translate("mainWindow", "OPF time series"))
        self.actionOPF_time_series.setToolTip(_translate("mainWindow", "Optimal power flow time series"))
        self.actionDetect_transformers.setText(_translate("mainWindow", "q"))
        self.actionDetect_transformers.setToolTip(_translate("mainWindow", "<html><head/><body><p>Detect transformers.</p><p>Use the nodes nominal voltage to determine which branches should be a transformer.</p><p>If a branch joins two nodes with different voltage levels, the branch should be a transformer.</p></body></html>"))
        self.actionAuto_rate_branches.setText(_translate("mainWindow", "Auto rate branches"))
        self.actionAuto_rate_branches.setToolTip(_translate("mainWindow", "<html><head/><body><p>Automatic rating of the branches.</p><p>Use the branches calculated power to establish a rate, if the branch rate is unknown. A factor is available in the settings.</p></body></html>"))

from .matplotlibwidget import MatplotlibWidget
from .icons_rc import *

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_mainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())

