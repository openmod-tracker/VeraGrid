from GridCal.Engine import *


def test_ptdf():
    fname = os.path.join('..', '..', 'Grids_and_profiles', 'grids', 'PGOC_6bus.gridcal')
    main_circuit = FileOpen(fname).open()

    options = LinearAnalysisOptions()
    simulation = LinearAnalysisDriver(grid=main_circuit, options=options)
    simulation.run()
    # ptdf_df = simulation.results.mdl(result_type=ResultTypes.PTDFBranchesSensitivity)

    test_PTDF = [[ 1.91623446,  1.44561055,  1.5136715,   1.60134507,  1.59450438,  1.50980631],
                 [ 1.68124543,  1.36635605,  1.38637397,  1.1768662,   1.41014835,  1.38523715],
                 [ 1.40252012,  1.1880334,   1.09995453,  1.22178873,  0.99534727,  1.10495654],
                 [ 0.56745464,  0.6219034,   0.22590105,  0.58346898,  0.46176,     0.37678514],
                 [-0.46997805, -0.15850902, -0.25459506, -0.84895775, -0.36871206, -0.24913832],
                 [ 0.12503048,  0.22429303,  0.09084019,  0.15422535, -0.06765565,  0.098419  ],
                 [ 0.69372739,  0.75792314,  0.45152532,  0.71260849,  0.56911209,  0.2837405 ],
                 [-0.40136353, -0.33918439, -0.11239694, -0.38307554, -0.5220642,  -0.24873302],
                 [-0.03118183, -0.03891221,  0.338298,   -0.03345547, -0.0161758,  -0.37448184],
                 [ 0.21126737,  0.20784703,  0.13177891,  0.32790845,  0.04143628,  0.13609883],
                 [ 0.33745444,  0.28098907,  0.21017668,  0.32084698,  0.44706371,  0.09074134]]
    test_PTDF = np.array(test_PTDF)

    test_LODF = [[-1.        ,  0.63534339,  0.54270469, -0.11268412, -0.50309766, -0.21028677, -0.12208756, -0.13692765,  0.01345724,  0.00958714,  0.13158461],
                 [ 0.59483113, -1.        ,  0.45729531, -0.03314239,  0.61214366, -0.06184905, -0.03590811, -0.04027284,  0.00395801, -0.3269419 ,  0.03870135],
                 [ 0.40516887,  0.36465661, -1.        ,  0.14582651, -0.10904601,  0.27213582,  0.15799566,  0.17720049, -0.01741525,  0.31735476, -0.17028596],
                 [-0.10285458, -0.03231168,  0.17828914, -1.        ,  0.12416172,  0.22617485,  0.46616617, -0.39953559, -0.52532553,  0.17057357,  0.13201462],
                 [-0.58837004,  0.76465661, -0.17081874,  0.15908347, -1.        ,  0.29687544,  0.17235891,  0.19330963, -0.01899845, -0.6730581 , -0.1857665 ],
                 [-0.18750856, -0.05890566,  0.32502918,  0.22094926,  0.22635243, -1.        ,  0.23938737,  0.2684856 , -0.02638674,  0.31096333, -0.25800903],
                 [-0.12126682, -0.03809587,  0.2102051 ,  0.50728314,  0.1463882 ,  0.26666294, -1.        , -0.19918729,  0.58416796,  0.20110834,  0.44334552],
                 [-0.11745739, -0.03689914,  0.2036018 , -0.37547736,  0.14178961,  0.2582861 , -0.1720205 , -1.        ,  0.47467447,  0.1947908 , -0.42463986],
                 [ 0.01460281,  0.00458746, -0.02531266, -0.62452264, -0.0176279 , -0.03211124,  0.63818667,  0.60046441, -1.        , -0.02421723,  0.55665448],
                 [ 0.00646109, -0.23534339,  0.28647657,  0.12594108, -0.38785634,  0.23502639,  0.1364508 ,  0.15303679, -0.01504044, -1.        , -0.14706515],
                 [ 0.10666401,  0.03350841, -0.18489245,  0.1172395 , -0.1287603 , -0.2345517 ,  0.36181333, -0.40127712,  0.41583204, -0.17689111, -1.        ]]
    test_LODF = np.array(test_LODF)


    assert(np.max(np.abs(simulation.results.PTDF - test_PTDF)) < 1e-3)
    assert(np.max(np.abs(simulation.results.LODF - test_LODF)) < 1e-3)

    return True


if __name__ == '__main__':
    test_ptdf()
